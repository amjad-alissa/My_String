        -:    0:Source:C:/PROGRA~1/MINGW-~1/X86_64~1.0-P/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_construct.h
        -:    0:Graph:F:\SoftwareProjects\CLionProjects\C++\My_String\cmake-build-debug\test\CMakeFiles\Boost_Tests_run.dir\MyStringTest.cpp.gcno
        -:    0:Data:F:\SoftwareProjects\CLionProjects\C++\My_String\cmake-build-debug\test\CMakeFiles\Boost_Tests_run.dir\MyStringTest.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// nonstandard construct and destroy functions -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2018 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/*
        -:   26: *
        -:   27: * Copyright (c) 1994
        -:   28: * Hewlett-Packard Company
        -:   29: *
        -:   30: * Permission to use, copy, modify, distribute and sell this software
        -:   31: * and its documentation for any purpose is hereby granted without fee,
        -:   32: * provided that the above copyright notice appear in all copies and
        -:   33: * that both that copyright notice and this permission notice appear
        -:   34: * in supporting documentation.  Hewlett-Packard Company makes no
        -:   35: * representations about the suitability of this software for any
        -:   36: * purpose.  It is provided "as is" without express or implied warranty.
        -:   37: *
        -:   38: *
        -:   39: * Copyright (c) 1996,1997
        -:   40: * Silicon Graphics Computer Systems, Inc.
        -:   41: *
        -:   42: * Permission to use, copy, modify, distribute and sell this software
        -:   43: * and its documentation for any purpose is hereby granted without fee,
        -:   44: * provided that the above copyright notice appear in all copies and
        -:   45: * that both that copyright notice and this permission notice appear
        -:   46: * in supporting documentation.  Silicon Graphics makes no
        -:   47: * representations about the suitability of this software for any
        -:   48: * purpose.  It is provided "as is" without express or implied warranty.
        -:   49: */
        -:   50:
        -:   51:/** @file bits/stl_construct.h
        -:   52: *  This is an internal header file, included by other library headers.
        -:   53: *  Do not attempt to use it directly. @headername{memory}
        -:   54: */
        -:   55:
        -:   56:#ifndef _STL_CONSTRUCT_H
        -:   57:#define _STL_CONSTRUCT_H 1
        -:   58:
        -:   59:#include <new>
        -:   60:#include <bits/move.h>
        -:   61:#include <ext/alloc_traits.h>
        -:   62:
        -:   63:namespace std _GLIBCXX_VISIBILITY(default)
        -:   64:{
        -:   65:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   66:
        -:   67:  /**
        -:   68:   * Constructs an object in existing memory by invoking an allocated
        -:   69:   * object's constructor with an initializer.
        -:   70:   */
        -:   71:#if __cplusplus >= 201103L
        -:   72:  template<typename _T1, typename... _Args>
        -:   73:    inline void
     312*:   74:    _Construct(_T1* __p, _Args&&... __args)
     312*:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
------------------
_ZSt10_ConstructIN5boost10shared_ptrINS0_9unit_test17test_unit_fixtureEEEJRS4_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructIN5boost10shared_ptrINS0_9unit_test9decorator4baseEEEJRKS5_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructIN5boost7runtime16parameter_cla_idEJRKS2_EEvPT_DpOT0_:
       71:   74:    _Construct(_T1* __p, _Args&&... __args)
       71:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       71:   75-block  0
       71:   75-block  1
    $$$$$:   75-block  2
------------------
_ZSt10_ConstructISt6vectorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEESaIS6_EEJEEvPT_DpOT0_:
        1:   74:    _Construct(_T1* __p, _Args&&... __args)
        1:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
        1:   75-block  0
------------------
_ZSt10_ConstructIN5boost9unit_test13basic_cstringIKcEEJRKS4_EEvPT_DpOT0_:
       55:   74:    _Construct(_T1* __p, _Args&&... __args)
       55:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       55:   75-block  0
------------------
_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_:
        4:   74:    _Construct(_T1* __p, _Args&&... __args)
        4:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
        4:   75-block  0
        4:   75-block  1
    $$$$$:   75-block  2
------------------
_ZSt10_ConstructIN5boost8functionIFNS0_10test_tools16assertion_resultEmEEEJRKS5_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
    %%%%%:   75-block  1
    $$$$$:   75-block  2
------------------
_ZSt10_ConstructIN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEJS5_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructIN5boost10shared_ptrINS0_9unit_test9decorator4baseEEEJRS5_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructIN5boost10shared_ptrINS0_9unit_test17test_unit_fixtureEEEJS4_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructIN5boost9unit_test9framework4impl11name_filter9componentEJRKS5_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructISt4pairIPKcPKN5boost9unit_test12lazy_ostreamEEJS8_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructISt4pairIN5boost10shared_ptrINS1_9unit_test19test_unit_generatorEEESt6vectorINS2_INS3_9decorator4baseEEESaIS9_EEEJSC_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructIN5boost17reference_wrapperIKNS0_7runtime16parameter_cla_idEEEJS5_EEvPT_DpOT0_:
      120:   74:    _Construct(_T1* __p, _Args&&... __args)
      120:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
      120:   75-block  0
------------------
_ZSt10_ConstructIN5boost10shared_ptrINS0_7runtime3cla13rt_cla_detail14parameter_trieEEEJS6_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructIN5boost10shared_ptrINS0_9unit_test9decorator4baseEEEJS5_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructISt6vectorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEESaIS6_EEJS8_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructISt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS6_EEJS8_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructIN5boost9unit_test9framework5state13context_frameEJS4_EEvPT_DpOT0_:
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
------------------
_ZSt10_ConstructIN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implEJS3_EEvPT_DpOT0_:
        3:   74:    _Construct(_T1* __p, _Args&&... __args)
        3:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
        3:   75-block  0
------------------
_ZSt10_ConstructIN5boost7runtime16parameter_cla_idEJS2_EEvPT_DpOT0_:
       58:   74:    _Construct(_T1* __p, _Args&&... __args)
       58:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       58:   75-block  0
------------------
        -:   76:#else
        -:   77:  template<typename _T1, typename _T2>
        -:   78:    inline void
        -:   79:    _Construct(_T1* __p, const _T2& __value)
        -:   80:    {
        -:   81:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:   82:      // 402. wrong new expression in [some_]allocator::construct
        -:   83:      ::new(static_cast<void*>(__p)) _T1(__value);
        -:   84:    }
        -:   85:#endif
        -:   86:
        -:   87:  template<typename _T1>
        -:   88:    inline void
        -:   89:    _Construct_novalue(_T1* __p)
        -:   90:    { ::new(static_cast<void*>(__p)) _T1; }
        -:   91:
        -:   92:  /**
        -:   93:   * Destroy the object pointed to by a pointer type.
        -:   94:   */
        -:   95:  template<typename _Tp>
        -:   96:    inline void
     139*:   97:    _Destroy(_Tp* __pointer)
     139*:   98:    { __pointer->~_Tp(); }
------------------
_ZSt8_DestroyIN5boost10shared_ptrINS0_7runtime3cla13rt_cla_detail14parameter_trieEEEEvPT_:
    #####:   97:    _Destroy(_Tp* __pointer)
    #####:   98:    { __pointer->~_Tp(); }
    %%%%%:   98-block  0
------------------
_ZSt8_DestroyIN5boost7runtime16parameter_cla_idEEvPT_:
      129:   97:    _Destroy(_Tp* __pointer)
      129:   98:    { __pointer->~_Tp(); }
      129:   98-block  0
------------------
_ZSt8_DestroyIN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implEEvPT_:
        6:   97:    _Destroy(_Tp* __pointer)
        6:   98:    { __pointer->~_Tp(); }
        6:   98-block  0
------------------
_ZSt8_DestroyIN5boost10shared_ptrINS0_9unit_test17test_unit_fixtureEEEEvPT_:
    #####:   97:    _Destroy(_Tp* __pointer)
    #####:   98:    { __pointer->~_Tp(); }
    %%%%%:   98-block  0
------------------
_ZSt8_DestroyIN5boost9unit_test9framework5state13context_frameEEvPT_:
    #####:   97:    _Destroy(_Tp* __pointer)
    #####:   98:    { __pointer->~_Tp(); }
    %%%%%:   98-block  0
------------------
_ZSt8_DestroyISt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS6_EEEvPT_:
        1:   97:    _Destroy(_Tp* __pointer)
        1:   98:    { __pointer->~_Tp(); }
        1:   98-block  0
------------------
_ZSt8_DestroyIN5boost10shared_ptrINS0_9unit_test9decorator4baseEEEEvPT_:
    #####:   97:    _Destroy(_Tp* __pointer)
    #####:   98:    { __pointer->~_Tp(); }
    %%%%%:   98-block  0
------------------
_ZSt8_DestroyIN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEEvPT_:
    #####:   97:    _Destroy(_Tp* __pointer)
    #####:   98:    { __pointer->~_Tp(); }
    %%%%%:   98-block  0
------------------
_ZSt8_DestroyISt4pairIN5boost10shared_ptrINS1_9unit_test19test_unit_generatorEEESt6vectorINS2_INS3_9decorator4baseEEESaIS9_EEEEvPT_:
    #####:   97:    _Destroy(_Tp* __pointer)
    #####:   98:    { __pointer->~_Tp(); }
    %%%%%:   98-block  0
------------------
_ZSt8_DestroyIN5boost8functionIFNS0_10test_tools16assertion_resultEmEEEEvPT_:
    #####:   97:    _Destroy(_Tp* __pointer)
    #####:   98:    { __pointer->~_Tp(); }
    %%%%%:   98-block  0
------------------
_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_:
        3:   97:    _Destroy(_Tp* __pointer)
        3:   98:    { __pointer->~_Tp(); }
        3:   98-block  0
------------------
_ZSt8_DestroyISt6vectorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEESaIS6_EEEvPT_:
    #####:   97:    _Destroy(_Tp* __pointer)
    #####:   98:    { __pointer->~_Tp(); }
    %%%%%:   98-block  0
------------------
        -:   99:
        -:  100:  template<bool>
        -:  101:    struct _Destroy_aux
        -:  102:    {
        -:  103:      template<typename _ForwardIterator>
        -:  104:        static void
     260*:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
     260*:  107:	  for (; __first != __last; ++__first)
     139*:  108:	    std::_Destroy(std::__addressof(*__first));
     121*:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost10shared_ptrINS2_7runtime3cla13rt_cla_detail14parameter_trieEEEEEvT_SA_:
       10:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
      10*:  107:	  for (; __first != __last; ++__first)
       10:  107-block  0
    #####:  108:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  108-block  0
       10:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost7runtime16parameter_cla_idEEEvT_S6_:
      228:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
      228:  107:	  for (; __first != __last; ++__first)
      228:  107-block  0
      129:  108:	    std::_Destroy(std::__addressof(*__first));
      129:  108-block  0
       99:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implEEEvT_S7_:
       10:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
       10:  107:	  for (; __first != __last; ++__first)
       10:  107-block  0
        6:  108:	    std::_Destroy(std::__addressof(*__first));
        6:  108-block  0
        4:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost10shared_ptrINS2_9unit_test17test_unit_fixtureEEEEEvT_S8_:
        1:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
       1*:  107:	  for (; __first != __last; ++__first)
        1:  107-block  0
    #####:  108:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  108-block  0
        1:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost9unit_test9framework5state13context_frameEEEvT_S8_:
    #####:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
    #####:  107:	  for (; __first != __last; ++__first)
    %%%%%:  107-block  0
    #####:  108:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  108-block  0
    #####:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS8_EEEEvT_SC_:
        3:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
        3:  107:	  for (; __first != __last; ++__first)
        3:  107-block  0
        1:  108:	    std::_Destroy(std::__addressof(*__first));
        1:  108-block  0
        2:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost10shared_ptrINS2_9unit_test9decorator4baseEEEEEvT_S9_:
    #####:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
    #####:  107:	  for (; __first != __last; ++__first)
    %%%%%:  107-block  0
    #####:  108:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  108-block  0
    #####:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEEEvT_S9_:
        1:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
       1*:  107:	  for (; __first != __last; ++__first)
        1:  107-block  0
    #####:  108:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  108-block  0
        1:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIN5boost10shared_ptrINS3_9unit_test19test_unit_generatorEEESt6vectorINS4_INS5_9decorator4baseEEESaISB_EEEEEvT_SG_:
    #####:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
    #####:  107:	  for (; __first != __last; ++__first)
    %%%%%:  107-block  0
    #####:  108:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  108-block  0
    #####:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost8functionIFNS2_10test_tools16assertion_resultEmEEEEEvT_S9_:
    #####:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
    #####:  107:	  for (; __first != __last; ++__first)
    %%%%%:  107-block  0
    #####:  108:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  108-block  0
    #####:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:
        7:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
        7:  107:	  for (; __first != __last; ++__first)
        7:  107-block  0
        3:  108:	    std::_Destroy(std::__addressof(*__first));
        3:  108-block  0
        4:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5boost10shared_ptrINS3_9unit_test9decorator4baseEEESaIS8_EEEEvT_SC_:
    #####:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
    #####:  107:	  for (; __first != __last; ++__first)
    %%%%%:  107-block  0
    #####:  108:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  108-block  0
    #####:  109:	}
------------------
        -:  110:    };
        -:  111:
        -:  112:  template<>
        -:  113:    struct _Destroy_aux<true>
        -:  114:    {
        -:  115:      template<typename _ForwardIterator>
        -:  116:        static void
    1271*:  117:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIPKcPKN5boost9unit_test12lazy_ostreamEEEEvT_SC_:
    #####:  117:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPN5boost17reference_wrapperIKNS2_7runtime16parameter_cla_idEEEEEvT_S9_:
     1221:  117:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_:
    #####:  117:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPPN5boost9unit_test10test_suiteEEEvT_S7_:
        2:  117:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPN5boost9unit_test9framework4impl11name_filter9componentEEEvT_S9_:
        3:  117:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_:
       20:  117:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPN5boost9unit_test13basic_cstringIKcEEEEvT_S8_:
       25:  117:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
        -:  118:    };
        -:  119:
        -:  120:  /**
        -:  121:   * Destroy a range of objects.  If the value_type of the object has
        -:  122:   * a trivial destructor, the compiler should optimize all of this
        -:  123:   * away, otherwise the objects' destructors must be invoked.
        -:  124:   */
        -:  125:  template<typename _ForwardIterator>
        -:  126:    inline void
    1392*:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    1392*:  137:	__destroy(__first, __last);
    1392*:  138:    }
------------------
_ZSt8_DestroyIPN5boost9unit_test9framework4impl11name_filter9componentEEvT_S7_:
        3:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
        3:  137:	__destroy(__first, __last);
        3:  137-block  0
        3:  138:    }
------------------
_ZSt8_DestroyIPN5boost9unit_test13basic_cstringIKcEEEvT_S6_:
       25:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
       25:  137:	__destroy(__first, __last);
       25:  137-block  0
       25:  138:    }
------------------
_ZSt8_DestroyIPSt6vectorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEESaIS6_EEEvT_SA_:
    #####:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  137:	__destroy(__first, __last);
    %%%%%:  137-block  0
    #####:  138:    }
------------------
_ZSt8_DestroyIPmEvT_S1_:
       20:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
       20:  137:	__destroy(__first, __last);
       20:  137-block  0
       20:  138:    }
------------------
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_:
        4:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
        4:  137:	__destroy(__first, __last);
        4:  137-block  0
        4:  138:    }
------------------
_ZSt8_DestroyIPN5boost8functionIFNS0_10test_tools16assertion_resultEmEEEEvT_S7_:
    #####:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  137:	__destroy(__first, __last);
    %%%%%:  137-block  0
    #####:  138:    }
------------------
_ZSt8_DestroyIPSt4pairIN5boost10shared_ptrINS1_9unit_test19test_unit_generatorEEESt6vectorINS2_INS3_9decorator4baseEEESaIS9_EEEEvT_SE_:
    #####:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  137:	__destroy(__first, __last);
    %%%%%:  137-block  0
    #####:  138:    }
------------------
_ZSt8_DestroyIPN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEEvT_S7_:
        1:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
        1:  137:	__destroy(__first, __last);
        1:  137-block  0
        1:  138:    }
------------------
_ZSt8_DestroyIPN5boost10shared_ptrINS0_9unit_test9decorator4baseEEEEvT_S7_:
    #####:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  137:	__destroy(__first, __last);
    %%%%%:  137-block  0
    #####:  138:    }
------------------
_ZSt8_DestroyIPSt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS6_EEEvT_SA_:
        2:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
        2:  137:	__destroy(__first, __last);
        2:  137-block  0
        2:  138:    }
------------------
_ZSt8_DestroyIPSt4pairIPKcPKN5boost9unit_test12lazy_ostreamEEEvT_SA_:
    #####:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  137:	__destroy(__first, __last);
    %%%%%:  137-block  0
    #####:  138:    }
------------------
_ZSt8_DestroyIPPN5boost9unit_test10test_suiteEEvT_S5_:
        2:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
        2:  137:	__destroy(__first, __last);
        2:  137-block  0
        2:  138:    }
------------------
_ZSt8_DestroyIPN5boost9unit_test9framework5state13context_frameEEvT_S6_:
    #####:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  137:	__destroy(__first, __last);
    %%%%%:  137-block  0
    #####:  138:    }
------------------
_ZSt8_DestroyIPN5boost10shared_ptrINS0_9unit_test17test_unit_fixtureEEEEvT_S6_:
        1:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
        1:  137:	__destroy(__first, __last);
        1:  137-block  0
        1:  138:    }
------------------
_ZSt8_DestroyIPcEvT_S1_:
    #####:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  137:	__destroy(__first, __last);
    %%%%%:  137-block  0
    #####:  138:    }
------------------
_ZSt8_DestroyIPN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implEEvT_S5_:
        4:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
        4:  137:	__destroy(__first, __last);
        4:  137-block  0
        4:  138:    }
------------------
_ZSt8_DestroyIPN5boost7runtime16parameter_cla_idEEvT_S4_:
       99:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
       99:  137:	__destroy(__first, __last);
       99:  137-block  0
       99:  138:    }
------------------
_ZSt8_DestroyIPN5boost17reference_wrapperIKNS0_7runtime16parameter_cla_idEEEEvT_S7_:
     1221:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
     1221:  137:	__destroy(__first, __last);
     1221:  137-block  0
     1221:  138:    }
------------------
_ZSt8_DestroyIPN5boost10shared_ptrINS0_7runtime3cla13rt_cla_detail14parameter_trieEEEEvT_S8_:
       10:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
       10:  137:	__destroy(__first, __last);
       10:  137-block  0
       10:  138:    }
------------------
        -:  139:
        -:  140:  template<bool>
        -:  141:    struct _Destroy_n_aux
        -:  142:    {
        -:  143:      template<typename _ForwardIterator, typename _Size>
        -:  144:        static _ForwardIterator
        -:  145:        __destroy_n(_ForwardIterator __first, _Size __count)
        -:  146:	{
        -:  147:	  for (; __count > 0; (void)++__first, --__count)
        -:  148:	    std::_Destroy(std::__addressof(*__first));
        -:  149:	  return __first;
        -:  150:	}
        -:  151:    };
        -:  152:
        -:  153:  template<>
        -:  154:    struct _Destroy_n_aux<true>
        -:  155:    {
        -:  156:      template<typename _ForwardIterator, typename _Size>
        -:  157:        static _ForwardIterator
        -:  158:        __destroy_n(_ForwardIterator __first, _Size __count)
        -:  159:	{
        -:  160:	  std::advance(__first, __count);
        -:  161:	  return __first;
        -:  162:	}
        -:  163:    };
        -:  164:
        -:  165:  /**
        -:  166:   * Destroy a range of objects.  If the value_type of the object has
        -:  167:   * a trivial destructor, the compiler should optimize all of this
        -:  168:   * away, otherwise the objects' destructors must be invoked.
        -:  169:   */
        -:  170:  template<typename _ForwardIterator, typename _Size>
        -:  171:    inline _ForwardIterator
        -:  172:    _Destroy_n(_ForwardIterator __first, _Size __count)
        -:  173:    {
        -:  174:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  175:                       _Value_type;
        -:  176:#if __cplusplus >= 201103L
        -:  177:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  178:      static_assert(is_destructible<_Value_type>::value,
        -:  179:		    "value type is destructible");
        -:  180:#endif
        -:  181:      return std::_Destroy_n_aux<__has_trivial_destructor(_Value_type)>::
        -:  182:	__destroy_n(__first, __count);
        -:  183:    }
        -:  184:
        -:  185:  /**
        -:  186:   * Destroy a range of objects using the supplied allocator.  For
        -:  187:   * nondefault allocators we do not optimize away invocation of 
        -:  188:   * destroy() even if _Tp has a trivial destructor.
        -:  189:   */
        -:  190:
        -:  191:  template<typename _ForwardIterator, typename _Allocator>
        -:  192:    void
        -:  193:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  194:	     _Allocator& __alloc)
        -:  195:    {
        -:  196:      typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
        -:  197:      for (; __first != __last; ++__first)
        -:  198:	__traits::destroy(__alloc, std::__addressof(*__first));
        -:  199:    }
        -:  200:
        -:  201:  template<typename _ForwardIterator, typename _Tp>
        -:  202:    inline void
    1392*:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    1392*:  206:      _Destroy(__first, __last);
    1392*:  207:    }
------------------
_ZSt8_DestroyIPN5boost9unit_test9framework4impl11name_filter9componentES5_EvT_S7_RSaIT0_E:
        3:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
        3:  206:      _Destroy(__first, __last);
        3:  206-block  0
        3:  207:    }
------------------
_ZSt8_DestroyIPN5boost9unit_test13basic_cstringIKcEES4_EvT_S6_RSaIT0_E:
       25:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
       25:  206:      _Destroy(__first, __last);
       25:  206-block  0
       25:  207:    }
------------------
_ZSt8_DestroyIPSt6vectorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEESaIS6_EES8_EvT_SA_RSaIT0_E:
    #####:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    #####:  206:      _Destroy(__first, __last);
    %%%%%:  206-block  0
    #####:  207:    }
------------------
_ZSt8_DestroyIPmmEvT_S1_RSaIT0_E:
       20:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
       20:  206:      _Destroy(__first, __last);
       20:  206-block  0
       20:  207:    }
------------------
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E:
        4:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
        4:  206:      _Destroy(__first, __last);
        4:  206-block  0
        4:  207:    }
------------------
_ZSt8_DestroyIPN5boost8functionIFNS0_10test_tools16assertion_resultEmEEES5_EvT_S7_RSaIT0_E:
    #####:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    #####:  206:      _Destroy(__first, __last);
    %%%%%:  206-block  0
    #####:  207:    }
------------------
_ZSt8_DestroyIPSt4pairIN5boost10shared_ptrINS1_9unit_test19test_unit_generatorEEESt6vectorINS2_INS3_9decorator4baseEEESaIS9_EEESC_EvT_SE_RSaIT0_E:
    #####:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    #####:  206:      _Destroy(__first, __last);
    %%%%%:  206-block  0
    #####:  207:    }
------------------
_ZSt8_DestroyIPN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryES5_EvT_S7_RSaIT0_E:
        1:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
        1:  206:      _Destroy(__first, __last);
        1:  206-block  0
        1:  207:    }
------------------
_ZSt8_DestroyIPN5boost10shared_ptrINS0_9unit_test9decorator4baseEEES5_EvT_S7_RSaIT0_E:
    #####:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    #####:  206:      _Destroy(__first, __last);
    %%%%%:  206-block  0
    #####:  207:    }
------------------
_ZSt8_DestroyIPSt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS6_EES8_EvT_SA_RSaIT0_E:
        2:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
        2:  206:      _Destroy(__first, __last);
        2:  206-block  0
        2:  207:    }
------------------
_ZSt8_DestroyIPSt4pairIPKcPKN5boost9unit_test12lazy_ostreamEES8_EvT_SA_RSaIT0_E:
    #####:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    #####:  206:      _Destroy(__first, __last);
    %%%%%:  206-block  0
    #####:  207:    }
------------------
_ZSt8_DestroyIPPN5boost9unit_test10test_suiteES3_EvT_S5_RSaIT0_E:
        2:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
        2:  206:      _Destroy(__first, __last);
        2:  206-block  0
        2:  207:    }
------------------
_ZSt8_DestroyIPN5boost9unit_test9framework5state13context_frameES4_EvT_S6_RSaIT0_E:
    #####:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    #####:  206:      _Destroy(__first, __last);
    %%%%%:  206-block  0
    #####:  207:    }
------------------
_ZSt8_DestroyIPN5boost10shared_ptrINS0_9unit_test17test_unit_fixtureEEES4_EvT_S6_RSaIT0_E:
        1:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
        1:  206:      _Destroy(__first, __last);
        1:  206-block  0
        1:  207:    }
------------------
_ZSt8_DestroyIPccEvT_S1_RSaIT0_E:
    #####:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    #####:  206:      _Destroy(__first, __last);
    %%%%%:  206-block  0
    #####:  207:    }
------------------
_ZSt8_DestroyIPN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implES3_EvT_S5_RSaIT0_E:
        4:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
        4:  206:      _Destroy(__first, __last);
        4:  206-block  0
        4:  207:    }
------------------
_ZSt8_DestroyIPN5boost7runtime16parameter_cla_idES2_EvT_S4_RSaIT0_E:
       99:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
       99:  206:      _Destroy(__first, __last);
       99:  206-block  0
       99:  207:    }
------------------
_ZSt8_DestroyIPN5boost17reference_wrapperIKNS0_7runtime16parameter_cla_idEEES5_EvT_S7_RSaIT0_E:
     1221:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
     1221:  206:      _Destroy(__first, __last);
     1221:  206-block  0
     1221:  207:    }
------------------
_ZSt8_DestroyIPN5boost10shared_ptrINS0_7runtime3cla13rt_cla_detail14parameter_trieEEES6_EvT_S8_RSaIT0_E:
       10:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
       10:  206:      _Destroy(__first, __last);
       10:  206-block  0
       10:  207:    }
------------------
        -:  208:
        -:  209:#if __cplusplus > 201402L
        -:  210:  template <typename _Tp>
        -:  211:    inline void
        -:  212:    destroy_at(_Tp* __location)
        -:  213:    {
        -:  214:      std::_Destroy(__location);
        -:  215:    }
        -:  216:
        -:  217:  template <typename _ForwardIterator>
        -:  218:    inline void
        -:  219:    destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  220:    {
        -:  221:      std::_Destroy(__first, __last);
        -:  222:    }
        -:  223:
        -:  224:  template <typename _ForwardIterator, typename _Size>
        -:  225:    inline _ForwardIterator
        -:  226:    destroy_n(_ForwardIterator __first, _Size __count)
        -:  227:    {
        -:  228:      return std::_Destroy_n(__first, __count);
        -:  229:    }
        -:  230:#endif
        -:  231:
        -:  232:_GLIBCXX_END_NAMESPACE_VERSION
        -:  233:} // namespace std
        -:  234:
        -:  235:#endif /* _STL_CONSTRUCT_H */
        -:  236:
