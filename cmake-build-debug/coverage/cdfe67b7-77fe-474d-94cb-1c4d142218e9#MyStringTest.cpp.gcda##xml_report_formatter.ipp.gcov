        -:    0:Source:F:/Files/vcpkg/installed/x86-windows/include/boost/test/impl/xml_report_formatter.ipp
        -:    0:Graph:F:\SoftwareProjects\CLionProjects\C++\My_String\cmake-build-debug\test\CMakeFiles\Boost_Tests_run.dir\MyStringTest.cpp.gcno
        -:    0:Data:F:\SoftwareProjects\CLionProjects\C++\My_String\cmake-build-debug\test\CMakeFiles\Boost_Tests_run.dir\MyStringTest.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://  (C) Copyright Gennadiy Rozental 2001.
        -:    2://  Distributed under the Boost Software License, Version 1.0.
        -:    3://  (See accompanying file LICENSE_1_0.txt or copy at
        -:    4://  http://www.boost.org/LICENSE_1_0.txt)
        -:    5:
        -:    6://  See http://www.boost.org/libs/test for the library home page.
        -:    7://
        -:    8://  File        : $RCSfile$
        -:    9://
        -:   10://  Version     : $Revision$
        -:   11://
        -:   12://  Description : OF_XML report formatter
        -:   13:// ***************************************************************************
        -:   14:
        -:   15:#ifndef BOOST_TEST_XML_REPORT_FORMATTER_IPP_020105GER
        -:   16:#define BOOST_TEST_XML_REPORT_FORMATTER_IPP_020105GER
        -:   17:
        -:   18:// Boost.Test
        -:   19:#include <boost/test/results_collector.hpp>
        -:   20:#include <boost/test/output/xml_report_formatter.hpp>
        -:   21:
        -:   22:#include <boost/test/tree/test_unit.hpp>
        -:   23:#include <boost/test/utils/xml_printer.hpp>
        -:   24:#include <boost/test/utils/basic_cstring/io.hpp>
        -:   25:
        -:   26:#include <boost/test/detail/suppress_warnings.hpp>
        -:   27:
        -:   28://____________________________________________________________________________//
        -:   29:
        -:   30:namespace boost {
        -:   31:namespace unit_test {
        -:   32:namespace output {
        -:   33:
        -:   34:void
    #####:   35:xml_report_formatter::results_report_start( std::ostream& ostr )
        -:   36:{
    #####:   37:    ostr << "<TestResult>";
    %%%%%:   37-block  0
    #####:   38:}
        -:   39:
        -:   40://____________________________________________________________________________//
        -:   41:
        -:   42:void
    #####:   43:xml_report_formatter::results_report_finish( std::ostream& ostr )
        -:   44:{
    #####:   45:    ostr << "</TestResult>";
    %%%%%:   45-block  0
    #####:   46:}
        -:   47:
        -:   48:
        -:   49://____________________________________________________________________________//
        -:   50:
        -:   51:void
    #####:   52:xml_report_formatter::test_unit_report_start( test_unit const& tu, std::ostream& ostr )
        -:   53:{
    #####:   54:    test_results const& tr = results_collector.results( tu.p_id );
    %%%%%:   54-block  0
        -:   55:
    #####:   56:    const_string descr;
    %%%%%:   56-block  0
        -:   57:
    #####:   58:    if( tr.passed() )
    %%%%%:   58-block  0
    %%%%%:   58-block  1
    #####:   59:        descr = "passed";
    %%%%%:   59-block  0
    #####:   60:    else if( tr.p_skipped )
    %%%%%:   60-block  0
    #####:   61:        descr = "skipped";
    %%%%%:   61-block  0
    #####:   62:    else if( tr.p_timed_out )
    %%%%%:   62-block  0
    #####:   63:        descr = "timed-out";
    %%%%%:   63-block  0
    #####:   64:    else if( tr.p_aborted )
    %%%%%:   64-block  0
    #####:   65:        descr = "aborted";
    %%%%%:   65-block  0
        -:   66:    else
    #####:   67:        descr = "failed";
    %%%%%:   67-block  0
        -:   68:
    #####:   69:    ostr << '<' << ( tu.p_type == TUT_CASE ? "TestCase" : "TestSuite" )
    #####:   70:         << " name"                     << utils::attr_value() << tu.p_name.get()
    %%%%%:   70-block  0
    %%%%%:   70-block  1
    %%%%%:   70-block  2
    %%%%%:   70-block  3
    %%%%%:   70-block  4
    %%%%%:   70-block  5
    %%%%%:   70-block  6
    %%%%%:   70-block  7
    $$$$$:   70-block  8
    $$$$$:   70-block  9
    #####:   71:         << " result"                   << utils::attr_value() << descr
    %%%%%:   71-block  0
    %%%%%:   71-block  1
    %%%%%:   71-block  2
    $$$$$:   71-block  3
    $$$$$:   71-block  4
    #####:   72:         << " assertions_passed"        << utils::attr_value() << tr.p_assertions_passed
    %%%%%:   72-block  0
    %%%%%:   72-block  1
    %%%%%:   72-block  2
    $$$$$:   72-block  3
    $$$$$:   72-block  4
    #####:   73:         << " assertions_failed"        << utils::attr_value() << tr.p_assertions_failed
    %%%%%:   73-block  0
    %%%%%:   73-block  1
    %%%%%:   73-block  2
    $$$$$:   73-block  3
    $$$$$:   73-block  4
    #####:   74:         << " warnings_failed"          << utils::attr_value() << tr.p_warnings_failed
    %%%%%:   74-block  0
    %%%%%:   74-block  1
    %%%%%:   74-block  2
    $$$$$:   74-block  3
    $$$$$:   74-block  4
    #####:   75:         << " expected_failures"        << utils::attr_value() << tr.p_expected_failures
    %%%%%:   75-block  0
    %%%%%:   75-block  1
    %%%%%:   75-block  2
    $$$$$:   75-block  3
    $$$$$:   75-block  4
        -:   76:            ;
        -:   77:
    #####:   78:    if( tu.p_type == TUT_SUITE ) {
    %%%%%:   78-block  0
    #####:   79:        ostr << " test_cases_passed"    << utils::attr_value() << tr.p_test_cases_passed
    %%%%%:   79-block  0
    %%%%%:   79-block  1
    %%%%%:   79-block  2
    $$$$$:   79-block  3
    $$$$$:   79-block  4
    #####:   80:             << " test_cases_passed_with_warnings" << utils::attr_value() << tr.p_test_cases_warned
    %%%%%:   80-block  0
    %%%%%:   80-block  1
    %%%%%:   80-block  2
    $$$$$:   80-block  3
    $$$$$:   80-block  4
    #####:   81:             << " test_cases_failed"    << utils::attr_value() << tr.p_test_cases_failed
    %%%%%:   81-block  0
    %%%%%:   81-block  1
    %%%%%:   81-block  2
    $$$$$:   81-block  3
    $$$$$:   81-block  4
    #####:   82:             << " test_cases_skipped"   << utils::attr_value() << tr.p_test_cases_skipped
    %%%%%:   82-block  0
    %%%%%:   82-block  1
    %%%%%:   82-block  2
    $$$$$:   82-block  3
    $$$$$:   82-block  4
    #####:   83:             << " test_cases_aborted"   << utils::attr_value() << tr.p_test_cases_aborted
    %%%%%:   83-block  0
    %%%%%:   83-block  1
    %%%%%:   83-block  2
    $$$$$:   83-block  3
    $$$$$:   83-block  4
    #####:   84:             << " test_cases_timed_out" << utils::attr_value() << tr.p_test_cases_timed_out
    %%%%%:   84-block  0
    %%%%%:   84-block  1
    %%%%%:   84-block  2
    $$$$$:   84-block  3
    $$$$$:   84-block  4
    #####:   85:             << " test_suites_timed_out"<< utils::attr_value() << tr.p_test_suites_timed_out
    %%%%%:   85-block  0
    %%%%%:   85-block  1
    %%%%%:   85-block  2
    %%%%%:   85-block  3
    $$$$$:   85-block  4
    $$$$$:   85-block  5
        -:   86:             ;
        -:   87:    }
        -:   88:
    #####:   89:    ostr << '>';
    %%%%%:   89-block  0
    #####:   90:}
    %%%%%:   90-block  0
        -:   91:
        -:   92://____________________________________________________________________________//
        -:   93:
        -:   94:void
    #####:   95:xml_report_formatter::test_unit_report_finish( test_unit const& tu, std::ostream& ostr )
        -:   96:{
    #####:   97:    ostr << "</" << ( tu.p_type == TUT_CASE ? "TestCase" : "TestSuite" ) << '>';
    %%%%%:   97-block  0
    %%%%%:   97-block  1
    %%%%%:   97-block  2
    %%%%%:   97-block  3
    #####:   98:}
        -:   99:
        -:  100://____________________________________________________________________________//
        -:  101:
        -:  102:void
    #####:  103:xml_report_formatter::do_confirmation_report( test_unit const& tu, std::ostream& ostr )
        -:  104:{
    #####:  105:    test_unit_report_start( tu, ostr );
    %%%%%:  105-block  0
    #####:  106:    test_unit_report_finish( tu, ostr );
    #####:  107:}
        -:  108:
        -:  109://____________________________________________________________________________//
        -:  110:
        -:  111:} // namespace output
        -:  112:} // namespace unit_test
        -:  113:} // namespace boost
        -:  114:
        -:  115:#include <boost/test/detail/enable_warnings.hpp>
        -:  116:
        -:  117:#endif // BOOST_TEST_XML_REPORT_FORMATTER_IPP_020105GER
