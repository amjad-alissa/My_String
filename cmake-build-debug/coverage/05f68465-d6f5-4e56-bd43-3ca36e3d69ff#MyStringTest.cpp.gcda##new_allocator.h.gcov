        -:    0:Source:C:/PROGRA~1/MINGW-~1/X86_64~1.0-P/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/ext/new_allocator.h
        -:    0:Graph:F:\SoftwareProjects\CLionProjects\C++\My_String\cmake-build-debug\test\CMakeFiles\Boost_Tests_run.dir\MyStringTest.cpp.gcno
        -:    0:Data:F:\SoftwareProjects\CLionProjects\C++\My_String\cmake-build-debug\test\CMakeFiles\Boost_Tests_run.dir\MyStringTest.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// Allocator that wraps operator new -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2018 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file ext/new_allocator.h
        -:   26: *  This file is a GNU extension to the Standard C++ Library.
        -:   27: */
        -:   28:
        -:   29:#ifndef _NEW_ALLOCATOR_H
        -:   30:#define _NEW_ALLOCATOR_H 1
        -:   31:
        -:   32:#include <bits/c++config.h>
        -:   33:#include <new>
        -:   34:#include <bits/functexcept.h>
        -:   35:#include <bits/move.h>
        -:   36:#if __cplusplus >= 201103L
        -:   37:#include <type_traits>
        -:   38:#endif
        -:   39:
        -:   40:namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
        -:   41:{
        -:   42:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   43:
        -:   44:  using std::size_t;
        -:   45:  using std::ptrdiff_t;
        -:   46:
        -:   47:  /**
        -:   48:   *  @brief  An allocator that uses global new, as per [20.4].
        -:   49:   *  @ingroup allocators
        -:   50:   *
        -:   51:   *  This is precisely the allocator defined in the C++ Standard.
        -:   52:   *    - all allocation calls operator new
        -:   53:   *    - all deallocation calls operator delete
        -:   54:   *
        -:   55:   *  @tparam  _Tp  Type of allocated object.
        -:   56:   */
        -:   57:  template<typename _Tp>
        -:   58:    class new_allocator
        -:   59:    {
        -:   60:    public:
        -:   61:      typedef size_t     size_type;
        -:   62:      typedef ptrdiff_t  difference_type;
        -:   63:      typedef _Tp*       pointer;
        -:   64:      typedef const _Tp* const_pointer;
        -:   65:      typedef _Tp&       reference;
        -:   66:      typedef const _Tp& const_reference;
        -:   67:      typedef _Tp        value_type;
        -:   68:
        -:   69:      template<typename _Tp1>
        -:   70:	struct rebind
        -:   71:	{ typedef new_allocator<_Tp1> other; };
        -:   72:
        -:   73:#if __cplusplus >= 201103L
        -:   74:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:   75:      // 2103. propagate_on_container_move_assignment
        -:   76:      typedef std::true_type propagate_on_container_move_assignment;
        -:   77:#endif
        -:   78:
    1306*:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test14global_fixtureEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime11basic_paramEEEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime8argumentEEEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPKN5boost7runtime16parameter_cla_idEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcN5boost10shared_ptrINS4_7runtime3cla13rt_cla_detail14parameter_trieEEEEEEC2Ev:
      572:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2Ev:
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmmEEEC2Ev:
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test12test_resultsEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost16exception_detail10type_info_ENS3_10shared_ptrINS4_15error_info_baseEEEEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test9framework4impl10order_infoEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13output_formatENS4_14runtime_config13stream_holderEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcPS3_EEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test13test_observerEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmPN5boost9unit_test9test_unitEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeImEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test6output10junit_impl16junit_log_helperEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2Ev:
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test17test_unit_fixtureEEEEC2Ev:
       13:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework4impl11name_filter9componentEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKcPS2_EEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost10shared_ptrINS2_9unit_test9decorator4baseEEESaIS7_EEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost17reference_wrapperIKNS1_7runtime16parameter_cla_idEEEEC2Ev:
      572:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_9log_levelEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_13output_formatEEEEC2Ev:
        4:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost7runtime16parameter_cla_idEEC2Ev:
       28:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost8functionIFNS1_10test_tools16assertion_resultEmEEEEC2Ev:
       12:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_12report_levelEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_9log_levelEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_13output_formatEEEC2Ev:
        4:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIPKcPKN5boost9unit_test12lazy_ostreamEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test13basic_cstringIKcEEEC2Ev:
        6:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_7runtime3cla13rt_cla_detail14parameter_trieEEEEC2Ev:
       10:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_12report_levelEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIN5boost10shared_ptrINS2_9unit_test19test_unit_generatorEEESt6vectorINS3_INS4_9decorator4baseEEESaISA_EEEEC2Ev:
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev:
       15:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework5state13context_frameEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5boost9unit_test10test_suiteEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS7_EEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImEC2Ev:
       27:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEEEC2Ev:
       13:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime3cla13rt_cla_detail14parameter_trieEEEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   80:
      98*:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework4impl11name_filter9componentEEC2ERKS7_:
        2:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS9_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKcPS2_EEC2ERKS5_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test14global_fixtureEEEC2ERKS7_:
        1:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test13test_observerEEEC2ERKS7_:
        1:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test13basic_cstringIKcEEEC2ERKS6_:
       12:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost10shared_ptrINS2_9unit_test9decorator4baseEEESaIS7_EEEC2ERKSA_:
        1:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcPS3_EEEC2ERKS7_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEEEC2ERKS7_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_12report_levelEEEEC2ERKSC_:
        2:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test17test_unit_fixtureEEEEC2ERKS6_:
        1:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost7runtime16parameter_cla_idEEC2ERKS4_:
       56:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS7_:
        6:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEEC2ERKS7_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_13output_formatEEEC2ERKSA_:
        4:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_9log_levelEEEC2ERKSA_:
        1:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_12report_levelEEEC2ERKSA_:
        1:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_13output_formatEEEEC2ERKSC_:
        8:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_9log_levelEEEEC2ERKSC_:
        2:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   82:
        -:   83:      template<typename _Tp1>
        -:   84:	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
        -:   85:
    1286*:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13output_formatENS4_14runtime_config13stream_holderEEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime11basic_paramEEEEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime8argumentEEEEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPKN5boost7runtime16parameter_cla_idEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcN5boost10shared_ptrINS4_7runtime3cla13rt_cla_detail14parameter_trieEEEEEED2Ev:
      572:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmmEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test12test_resultsEEEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost16exception_detail10type_info_ENS3_10shared_ptrINS4_15error_info_baseEEEEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test17test_unit_fixtureEEEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test9framework4impl10order_infoEEEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcPS3_EEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test14global_fixtureEEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test13test_observerEEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmPN5boost9unit_test9test_unitEEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework4impl11name_filter9componentEED2Ev:
        3:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKcPS2_EED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeImEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test6output10junit_impl16junit_log_helperEEEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost10shared_ptrINS2_9unit_test9decorator4baseEEESaIS7_EEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5boost9unit_test10test_suiteEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_9log_levelEEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_13output_formatEEED2Ev:
        8:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIPKcPKN5boost9unit_test12lazy_ostreamEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_12report_levelEEEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_9log_levelEEEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_13output_formatEEEED2Ev:
        8:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_7runtime3cla13rt_cla_detail14parameter_trieEEEED2Ev:
       10:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost17reference_wrapperIKNS1_7runtime16parameter_cla_idEEEED2Ev:
      572:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework5state13context_frameEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_12report_levelEEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS7_EEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIN5boost10shared_ptrINS2_9unit_test19test_unit_generatorEEESt6vectorINS3_INS4_9decorator4baseEEESaISA_EEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost8functionIFNS1_10test_tools16assertion_resultEmEEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
        7:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImED2Ev:
       13:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test13basic_cstringIKcEEED2Ev:
       12:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime3cla13rt_cla_detail14parameter_trieEEEEEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost7runtime16parameter_cla_idEED2Ev:
       56:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   87:
        -:   88:      pointer
        -:   89:      address(reference __x) const _GLIBCXX_NOEXCEPT
        -:   90:      { return std::__addressof(__x); }
        -:   91:
        -:   92:      const_pointer
        -:   93:      address(const_reference __x) const _GLIBCXX_NOEXCEPT
        -:   94:      { return std::__addressof(__x); }
        -:   95:
        -:   96:      // NB: __n is permitted to be 0.  The C++ standard says nothing
        -:   97:      // about what the return value is when __n == 0.
        -:   98:      pointer
    1928*:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    1928*:  101:	if (__n > this->max_size())
    #####:  102:	  std::__throw_bad_alloc();
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    1928*:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_7runtime3cla13rt_cla_detail14parameter_trieEEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13output_formatENS4_14runtime_config13stream_holderEEEE8allocateEyPKv:
        1:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        1:  101:	if (__n > this->max_size())
        1:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        1:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS7_EEE8allocateEyPKv:
        1:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        1:  101:	if (__n > this->max_size())
        1:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        1:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test9framework4impl10order_infoEEEE8allocateEyPKv:
       11:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       11:  101:	if (__n > this->max_size())
       11:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       11:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       11:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test6output10junit_impl16junit_log_helperEEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeImEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost10shared_ptrINS2_9unit_test9decorator4baseEEESaIS7_EEE8allocateEyPKv:
        1:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        1:  101:	if (__n > this->max_size())
        1:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        1:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test13basic_cstringIKcEEE8allocateEyPKv:
       25:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       25:  101:	if (__n > this->max_size())
       25:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       25:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       25:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework5state13context_frameEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost17reference_wrapperIKNS1_7runtime16parameter_cla_idEEEE8allocateEyPKv:
      649:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
      649:  101:	if (__n > this->max_size())
      649:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
      649:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      649:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIN5boost10shared_ptrINS2_9unit_test19test_unit_generatorEEESt6vectorINS3_INS4_9decorator4baseEEESaISA_EEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost8functionIFNS1_10test_tools16assertion_resultEmEEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5boost9unit_test10test_suiteEE8allocateEyPKv:
        2:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        2:  101:	if (__n > this->max_size())
        2:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        2:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        2:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEyPKv:
        5:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        5:  101:	if (__n > this->max_size())
        5:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        5:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        5:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE8allocateEyPKv:
        7:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        7:  101:	if (__n > this->max_size())
        7:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        7:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        7:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test17test_unit_fixtureEEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIcE8allocateEyPKv:
      394:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
      394:  101:	if (__n > this->max_size())
      394:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
      394:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      394:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmmEEE8allocateEyPKv:
       11:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       11:  101:	if (__n > this->max_size())
       11:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       11:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       11:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_9log_levelEEEE8allocateEyPKv:
       22:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       22:  101:	if (__n > this->max_size())
       22:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       22:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       22:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_13output_formatEEEE8allocateEyPKv:
       24:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       24:  101:	if (__n > this->max_size())
       24:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       24:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       24:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcPS3_EEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPKN5boost7runtime16parameter_cla_idEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcN5boost10shared_ptrINS4_7runtime3cla13rt_cla_detail14parameter_trieEEEEEE8allocateEyPKv:
      569:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
      569:  101:	if (__n > this->max_size())
      569:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
      569:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      569:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime11basic_paramEEEEEE8allocateEyPKv:
       28:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       28:  101:	if (__n > this->max_size())
       28:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       28:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       28:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEyPKv:
       11:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       11:  101:	if (__n > this->max_size())
       11:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       11:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       11:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test14global_fixtureEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test13test_observerEEE8allocateEyPKv:
        6:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        6:  101:	if (__n > this->max_size())
        6:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        6:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        6:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_12report_levelEEEE8allocateEyPKv:
        8:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        8:  101:	if (__n > this->max_size())
        8:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        8:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        8:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework4impl11name_filter9componentEE8allocateEyPKv:
        1:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        1:  101:	if (__n > this->max_size())
        1:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        1:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime8argumentEEEEEE8allocateEyPKv:
       23:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       23:  101:	if (__n > this->max_size())
       23:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       23:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       23:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime3cla13rt_cla_detail14parameter_trieEEEEEE8allocateEyPKv:
        3:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        3:  101:	if (__n > this->max_size())
        3:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        3:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        3:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost7runtime16parameter_cla_idEE8allocateEyPKv:
       99:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       99:  101:	if (__n > this->max_size())
       99:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       99:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       99:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implEE8allocateEyPKv:
        3:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        3:  101:	if (__n > this->max_size())
        3:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        3:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        3:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIPKcPKN5boost9unit_test12lazy_ostreamEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test12test_resultsEEEE8allocateEyPKv:
       12:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       12:  101:	if (__n > this->max_size())
       12:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       12:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       12:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost16exception_detail10type_info_ENS3_10shared_ptrINS4_15error_info_baseEEEEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmPN5boost9unit_test9test_unitEEEE8allocateEyPKv:
       12:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       12:  101:	if (__n > this->max_size())
       12:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       12:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       12:  111-block  0
        -:  112:      }
------------------
        -:  113:
        -:  114:      // __p is not permitted to be a null pointer.
        -:  115:      void
    1725*:  116:      deallocate(pointer __p, size_type)
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    1725*:  125:	::operator delete(__p);
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeImEE10deallocateEPS2_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost7runtime16parameter_cla_idEE10deallocateEPS3_y:
       71:  116:      deallocate(pointer __p, size_type)
       71:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       71:  125:	::operator delete(__p);
       71:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implEE10deallocateEPS4_y:
        3:  116:      deallocate(pointer __p, size_type)
        3:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        3:  125:	::operator delete(__p);
        3:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIPKcPKN5boost9unit_test12lazy_ostreamEEE10deallocateEPS9_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework5state13context_frameEE10deallocateEPS5_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5boost9unit_test10test_suiteEE10deallocateEPS4_y:
        1:  116:      deallocate(pointer __p, size_type)
        1:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        1:  125:	::operator delete(__p);
        1:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework4impl11name_filter9componentEE10deallocateEPS6_y:
        1:  116:      deallocate(pointer __p, size_type)
        1:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        1:  125:	::operator delete(__p);
        1:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS7_EEE10deallocateEPS9_y:
        1:  116:      deallocate(pointer __p, size_type)
        1:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        1:  125:	::operator delete(__p);
        1:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test17test_unit_fixtureEEEE10deallocateEPS5_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEEE10deallocateEPS6_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost17reference_wrapperIKNS1_7runtime16parameter_cla_idEEEE10deallocateEPS6_y:
      649:  116:      deallocate(pointer __p, size_type)
      649:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
      649:  125:	::operator delete(__p);
      649:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEE10deallocateEPS6_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIN5boost10shared_ptrINS2_9unit_test19test_unit_generatorEEESt6vectorINS3_INS4_9decorator4baseEEESaISA_EEEE10deallocateEPSD_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost8functionIFNS1_10test_tools16assertion_resultEmEEEE10deallocateEPS6_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_y:
        3:  116:      deallocate(pointer __p, size_type)
        3:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        3:  125:	::operator delete(__p);
        3:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmy:
        5:  116:      deallocate(pointer __p, size_type)
        5:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        5:  125:	::operator delete(__p);
        5:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost10shared_ptrINS2_9unit_test9decorator4baseEEESaIS7_EEE10deallocateEPS9_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test13basic_cstringIKcEEE10deallocateEPS5_y:
       19:  116:      deallocate(pointer __p, size_type)
       19:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       19:  125:	::operator delete(__p);
       19:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcy:
      332:  116:      deallocate(pointer __p, size_type)
      332:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
      332:  125:	::operator delete(__p);
      332:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost16exception_detail10type_info_ENS3_10shared_ptrINS4_15error_info_baseEEEEEE10deallocateEPSB_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_9log_levelEEEE10deallocateEPSB_y:
       11:  116:      deallocate(pointer __p, size_type)
       11:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       11:  125:	::operator delete(__p);
       11:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_13output_formatEEEE10deallocateEPSB_y:
       12:  116:      deallocate(pointer __p, size_type)
       12:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       12:  125:	::operator delete(__p);
       12:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime11basic_paramEEEEEE10deallocateEPSE_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime8argumentEEEEEE10deallocateEPSE_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPKN5boost7runtime16parameter_cla_idEEE10deallocateEPS7_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime3cla13rt_cla_detail14parameter_trieEEEEEE10deallocateEPSG_y:
        3:  116:      deallocate(pointer __p, size_type)
        3:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        3:  125:	::operator delete(__p);
        3:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcN5boost10shared_ptrINS4_7runtime3cla13rt_cla_detail14parameter_trieEEEEEE10deallocateEPSC_y:
      569:  116:      deallocate(pointer __p, size_type)
      569:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
      569:  125:	::operator delete(__p);
      569:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_y:
       11:  116:      deallocate(pointer __p, size_type)
       11:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       11:  125:	::operator delete(__p);
       11:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test12test_resultsEEEE10deallocateEPS8_y:
       12:  116:      deallocate(pointer __p, size_type)
       12:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       12:  125:	::operator delete(__p);
       12:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_12report_levelEEEE10deallocateEPSB_y:
        4:  116:      deallocate(pointer __p, size_type)
        4:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        4:  125:	::operator delete(__p);
        4:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13output_formatENS4_14runtime_config13stream_holderEEEE10deallocateEPSA_y:
        1:  116:      deallocate(pointer __p, size_type)
        1:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        1:  125:	::operator delete(__p);
        1:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test14global_fixtureEEE10deallocateEPS6_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test13test_observerEEE10deallocateEPS6_y:
        6:  116:      deallocate(pointer __p, size_type)
        6:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        6:  125:	::operator delete(__p);
        6:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmPN5boost9unit_test9test_unitEEEE10deallocateEPS9_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test9framework4impl10order_infoEEEE10deallocateEPSA_y:
       11:  116:      deallocate(pointer __p, size_type)
       11:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       11:  125:	::operator delete(__p);
       11:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcPS3_EEE10deallocateEPS6_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test6output10junit_impl16junit_log_helperEEEE10deallocateEPSA_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmmEEE10deallocateEPS5_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_7runtime3cla13rt_cla_detail14parameter_trieEEEE10deallocateEPS7_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
        -:  127:
        -:  128:      size_type
    4143*:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    4143*:  130:      { return size_t(-1) / sizeof(_Tp); }
------------------
_ZNK9__gnu_cxx13new_allocatorISt4pairIN5boost10shared_ptrINS2_9unit_test19test_unit_generatorEEESt6vectorINS3_INS4_9decorator4baseEEESaISA_EEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS7_EEE8max_sizeEv:
        3:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        3:  130:      { return size_t(-1) / sizeof(_Tp); }
        3:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test9framework4impl10order_infoEEEE8max_sizeEv:
       11:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       11:  130:      { return size_t(-1) / sizeof(_Tp); }
       11:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test6output10junit_impl16junit_log_helperEEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeImEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5boost10shared_ptrINS2_9unit_test9decorator4baseEEESaIS7_EEE8max_sizeEv:
        1:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        1:  130:      { return size_t(-1) / sizeof(_Tp); }
        1:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_7runtime3cla13rt_cla_detail14parameter_trieEEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIN5boost17reference_wrapperIKNS1_7runtime16parameter_cla_idEEEE8max_sizeEv:
     1947:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
     1947:  130:      { return size_t(-1) / sizeof(_Tp); }
     1947:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13output_formatENS4_14runtime_config13stream_holderEEEE8max_sizeEv:
        1:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        1:  130:      { return size_t(-1) / sizeof(_Tp); }
        1:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIN5boost8functionIFNS1_10test_tools16assertion_resultEmEEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIPN5boost9unit_test10test_suiteEE8max_sizeEv:
        6:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        6:  130:      { return size_t(-1) / sizeof(_Tp); }
        6:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv:
        7:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        7:  130:      { return size_t(-1) / sizeof(_Tp); }
        7:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv:
       21:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       21:  130:      { return size_t(-1) / sizeof(_Tp); }
       21:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test17test_unit_fixtureEEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt4pairIPKcPKN5boost9unit_test12lazy_ostreamEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv:
     1101:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
     1101:  130:      { return size_t(-1) / sizeof(_Tp); }
     1101:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIN5boost9unit_test13basic_cstringIKcEEE8max_sizeEv:
       63:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       63:  130:      { return size_t(-1) / sizeof(_Tp); }
       63:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmmEEE8max_sizeEv:
       11:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       11:  130:      { return size_t(-1) / sizeof(_Tp); }
       11:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_9log_levelEEEE8max_sizeEv:
       22:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       22:  130:      { return size_t(-1) / sizeof(_Tp); }
       22:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_13output_formatEEEE8max_sizeEv:
       24:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       24:  130:      { return size_t(-1) / sizeof(_Tp); }
       24:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcPS3_EEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPKN5boost7runtime16parameter_cla_idEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcN5boost10shared_ptrINS4_7runtime3cla13rt_cla_detail14parameter_trieEEEEEE8max_sizeEv:
      569:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
      569:  130:      { return size_t(-1) / sizeof(_Tp); }
      569:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime11basic_paramEEEEEE8max_sizeEv:
       28:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       28:  130:      { return size_t(-1) / sizeof(_Tp); }
       28:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeEv:
       11:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       11:  130:      { return size_t(-1) / sizeof(_Tp); }
       11:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test14global_fixtureEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test13test_observerEEE8max_sizeEv:
        6:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        6:  130:      { return size_t(-1) / sizeof(_Tp); }
        6:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_12report_levelEEEE8max_sizeEv:
        8:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        8:  130:      { return size_t(-1) / sizeof(_Tp); }
        8:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIN5boost9unit_test9framework4impl11name_filter9componentEE8max_sizeEv:
        3:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        3:  130:      { return size_t(-1) / sizeof(_Tp); }
        3:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime8argumentEEEEEE8max_sizeEv:
       23:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       23:  130:      { return size_t(-1) / sizeof(_Tp); }
       23:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime3cla13rt_cla_detail14parameter_trieEEEEEE8max_sizeEv:
        3:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        3:  130:      { return size_t(-1) / sizeof(_Tp); }
        3:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIN5boost7runtime16parameter_cla_idEE8max_sizeEv:
      241:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
      241:  130:      { return size_t(-1) / sizeof(_Tp); }
      241:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implEE8max_sizeEv:
        9:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        9:  130:      { return size_t(-1) / sizeof(_Tp); }
        9:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test12test_resultsEEEE8max_sizeEv:
       12:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       12:  130:      { return size_t(-1) / sizeof(_Tp); }
       12:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost16exception_detail10type_info_ENS3_10shared_ptrINS4_15error_info_baseEEEEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmPN5boost9unit_test9test_unitEEEE8max_sizeEv:
       12:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       12:  130:      { return size_t(-1) / sizeof(_Tp); }
       12:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIN5boost9unit_test9framework5state13context_frameEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
        -:  131:
        -:  132:#if __cplusplus >= 201103L
        -:  133:      template<typename _Up, typename... _Args>
        -:  134:	void
    1534*:  135:	construct(_Up* __p, _Args&&... __args)
    1534*:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS7_EEE9constructIS9_JS9_EEEvPT_DpOT0_:
        1:  135:	construct(_Up* __p, _Args&&... __args)
        1:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test6output10junit_impl16junit_log_helperEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESG_IJEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIPKcPKN5boost9unit_test12lazy_ostreamEEE9constructIS9_JS9_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeImEE9constructImJRKmEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JS7_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test13basic_cstringIKcEEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
       27:  135:	construct(_Up* __p, _Args&&... __args)
       27:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       27:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test13basic_cstringIKcEEE9constructIS5_JS5_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost7runtime16parameter_cla_idEE9constructIS3_JS3_EEEvPT_DpOT0_:
       71:  135:	construct(_Up* __p, _Args&&... __args)
       71:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       71:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implEE9constructIS4_JS4_EEEvPT_DpOT0_:
        3:  135:	construct(_Up* __p, _Args&&... __args)
        3:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        3:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test17test_unit_fixtureEEEE9constructIS5_JS5_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIPN5boost9unit_test10test_suiteEE9constructIS4_JS4_EEEvPT_DpOT0_:
        1:  135:	construct(_Up* __p, _Args&&... __args)
        1:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework5state13context_frameEE9constructIS5_JS5_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test9framework4impl10order_infoEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESG_IJEEEEEvPT_DpOT0_:
       11:  135:	construct(_Up* __p, _Args&&... __args)
       11:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       11:  136-block  0
       11:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost10shared_ptrINS2_9unit_test9decorator4baseEEESaIS7_EEE9constructIS9_JS9_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEEE9constructIS6_JS6_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_7runtime3cla13rt_cla_detail14parameter_trieEEEE9constructIS7_JRKS7_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost17reference_wrapperIKNS1_7runtime16parameter_cla_idEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_:
      675:  135:	construct(_Up* __p, _Args&&... __args)
      675:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      675:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIN5boost10shared_ptrINS2_9unit_test19test_unit_generatorEEESt6vectorINS3_INS4_9decorator4baseEEESaISA_EEEE9constructISD_JRKSD_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost8functionIFNS1_10test_tools16assertion_resultEmEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorIcE9constructIcJRKcEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIPN5boost9unit_test10test_suiteEE9constructIS4_JRKS4_EEEvPT_DpOT0_:
        1:  135:	construct(_Up* __p, _Args&&... __args)
        1:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_:
        1:  135:	construct(_Up* __p, _Args&&... __args)
        1:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  136-block  0
        1:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorImE9constructImJRKmEEEvPT_DpOT0_:
       12:  135:	construct(_Up* __p, _Args&&... __args)
       12:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       12:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test17test_unit_fixtureEEEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEE9constructIS6_JRKS6_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmPN5boost9unit_test9test_unitEEEE9constructIS8_JS8_EEEvPT_DpOT0_:
       12:  135:	construct(_Up* __p, _Args&&... __args)
       12:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       12:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_9log_levelEEEE9constructISA_JRKSA_EEEvPT_DpOT0_:
       22:  135:	construct(_Up* __p, _Args&&... __args)
       22:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       22:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_13output_formatEEEE9constructISA_JRKSA_EEEvPT_DpOT0_:
       24:  135:	construct(_Up* __p, _Args&&... __args)
       24:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       24:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test13test_observerEEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
        3:  135:	construct(_Up* __p, _Args&&... __args)
        3:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        3:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test14global_fixtureEEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcPS3_EEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPKN5boost7runtime16parameter_cla_idEEE9constructIS6_JS6_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcN5boost10shared_ptrINS4_7runtime3cla13rt_cla_detail14parameter_trieEEEEEE9constructISB_JS2_IcSA_EEEEvPT_DpOT0_:
      569:  135:	construct(_Up* __p, _Args&&... __args)
      569:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      569:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime11basic_paramEEEEEE9constructISD_JS2_IS7_SC_EEEEvPT_DpOT0_:
       28:  135:	construct(_Up* __p, _Args&&... __args)
       28:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       28:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JRKS7_EEEvPT_DpOT0_:
       11:  135:	construct(_Up* __p, _Args&&... __args)
       11:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       11:  136-block  0
       11:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost16exception_detail10type_info_ENS3_10shared_ptrINS4_15error_info_baseEEEEEE9constructISA_JS2_IS5_S9_EEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test14global_fixtureEEE9constructIS5_JS5_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test13test_observerEEE9constructIS5_JS5_EEEvPT_DpOT0_:
        3:  135:	construct(_Up* __p, _Args&&... __args)
        3:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        3:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_12report_levelEEEE9constructISA_JRKSA_EEEvPT_DpOT0_:
        8:  135:	construct(_Up* __p, _Args&&... __args)
        8:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        8:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmmEEE9constructIS4_JS2_ImmEEEEvPT_DpOT0_:
       11:  135:	construct(_Up* __p, _Args&&... __args)
       11:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       11:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test6output10junit_impl16junit_log_helperEEEE9constructIS9_JS2_INS5_9test_unit19readonly_property62ES8_EEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime8argumentEEEEEE9constructISD_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESK_IJEEEEEvPT_DpOT0_:
       23:  135:	construct(_Up* __p, _Args&&... __args)
       23:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       23:  136-block  0
       23:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime3cla13rt_cla_detail14parameter_trieEEEEEE9constructISF_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESM_IJEEEEEvPT_DpOT0_:
        3:  135:	construct(_Up* __p, _Args&&... __args)
        3:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        3:  136-block  0
        3:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime3cla13rt_cla_detail14parameter_trieEEEEEE9constructISF_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESM_IJEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test12test_resultsEEEE9constructIS7_JRKSt21piecewise_construct_tSt5tupleIJOmEESE_IJEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test12test_resultsEEEE9constructIS7_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESE_IJEEEEEvPT_DpOT0_:
       12:  135:	construct(_Up* __p, _Args&&... __args)
       12:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       12:  136-block  0
       12:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost16exception_detail10type_info_ENS3_10shared_ptrINS4_15error_info_baseEEEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS6_EESH_IJEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmPN5boost9unit_test9test_unitEEEE9constructIS8_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESF_IJEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13output_formatENS4_14runtime_config13stream_holderEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS6_EESG_IJEEEEEvPT_DpOT0_:
        1:  135:	construct(_Up* __p, _Args&&... __args)
        1:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  136-block  0
        1:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework4impl11name_filter9componentEE9constructIS6_JNS2_13basic_cstringIKcEEEEEvPT_DpOT0_:
        1:  135:	construct(_Up* __p, _Args&&... __args)
        1:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  136-block  0
        1:  136-block  1
    $$$$$:  136-block  2
------------------
        -:  137:
        -:  138:      template<typename _Up>
        -:  139:	void
     642*:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIcE7destroyIcEEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test13basic_cstringIKcEEE7destroyIS5_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost7runtime16parameter_cla_idEE7destroyIS3_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost9unit_test9framework4impl11name_filter9componentESaIS7_EEE7destroyIS9_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test9decorator4baseEEEE7destroyIS6_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_7runtime3cla13rt_cla_detail14parameter_trieEEEE7destroyIS7_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost17reference_wrapperIKNS1_7runtime16parameter_cla_idEEEE7destroyIS6_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test12_GLOBAL__N_130unit_test_log_data_helper_implEE7destroyIS4_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIN5boost10shared_ptrINS2_9unit_test19test_unit_generatorEEESt6vectorINS3_INS4_9decorator4baseEEESaISA_EEEE7destroyISD_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost8functionIFNS1_10test_tools16assertion_resultEmEEEE7destroyIS6_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmmEEE7destroyIS4_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework5state13context_frameEE7destroyIS5_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_9unit_test17test_unit_fixtureEEEE7destroyIS5_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5boost10shared_ptrINS2_9unit_test9decorator4baseEEESaIS7_EEE7destroyIS9_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test6output10junit_impl16junit_log_helper15assertion_entryEE7destroyIS6_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeImEE7destroyImEEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS7_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIPN5boost9unit_test10test_suiteEE7destroyIS4_EEvPT_:
        1:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorImE7destroyImEEvPT_:
        1:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIPKcPKN5boost9unit_test12lazy_ostreamEEE7destroyIS9_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_9log_levelEEEE7destroyISA_EEvPT_:
       11:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_13output_formatEEEE7destroyISA_EEvPT_:
       12:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5boost9unit_test9framework4impl11name_filter9componentEE7destroyIS6_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime11basic_paramEEEEEE7destroyISD_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime8argumentEEEEEE7destroyISD_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPKN5boost7runtime16parameter_cla_idEEE7destroyIS6_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS3_10shared_ptrINS3_7runtime3cla13rt_cla_detail14parameter_trieEEEEEE7destroyISF_EEvPT_:
        3:  140:	destroy(_Up* __p) { __p->~_Up(); }
        3:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcN5boost10shared_ptrINS4_7runtime3cla13rt_cla_detail14parameter_trieEEEEEE7destroyISB_EEvPT_:
      569:  140:	destroy(_Up* __p) { __p->~_Up(); }
      569:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS7_EEvPT_:
       11:  140:	destroy(_Up* __p) { __p->~_Up(); }
       11:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13basic_cstringIKcEENS4_12report_levelEEEE7destroyISA_EEvPT_:
        4:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test12test_resultsEEEE7destroyIS7_EEvPT_:
       12:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost16exception_detail10type_info_ENS3_10shared_ptrINS4_15error_info_baseEEEEEE7destroyISA_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKN5boost9unit_test13output_formatENS4_14runtime_config13stream_holderEEEE7destroyIS9_EEvPT_:
        1:  140:	destroy(_Up* __p) { __p->~_Up(); }
        1:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test14global_fixtureEEE7destroyIS5_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIPN5boost9unit_test13test_observerEEE7destroyIS5_EEvPT_:
        6:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmPN5boost9unit_test9test_unitEEEE7destroyIS8_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test9framework4impl10order_infoEEEE7destroyIS9_EEvPT_:
       11:  140:	destroy(_Up* __p) { __p->~_Up(); }
       11:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcPS3_EEE7destroyIS5_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmN5boost9unit_test6output10junit_impl16junit_log_helperEEEE7destroyIS9_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
        -:  141:#else
        -:  142:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  143:      // 402. wrong new expression in [some_] allocator::construct
        -:  144:      void
        -:  145:      construct(pointer __p, const _Tp& __val)
        -:  146:      { ::new((void *)__p) _Tp(__val); }
        -:  147:
        -:  148:      void
        -:  149:      destroy(pointer __p) { __p->~_Tp(); }
        -:  150:#endif
        -:  151:    };
        -:  152:
        -:  153:  template<typename _Tp>
        -:  154:    inline bool
        -:  155:    operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
        -:  156:    { return true; }
        -:  157:
        -:  158:  template<typename _Tp>
        -:  159:    inline bool
        -:  160:    operator!=(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
        -:  161:    { return false; }
        -:  162:
        -:  163:_GLIBCXX_END_NAMESPACE_VERSION
        -:  164:} // namespace
        -:  165:
        -:  166:#endif
